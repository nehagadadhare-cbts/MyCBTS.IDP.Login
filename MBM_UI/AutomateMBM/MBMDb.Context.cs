//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutomateMBM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MBMDevEntities : DbContext
    {
        public MBMDevEntities()
            : base("name=MBMDevEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<mbm_Invoice> mbm_Invoice { get; set; }
        public virtual DbSet<mbm_ProcessWorkFlowStatus> mbm_ProcessWorkFlowStatus { get; set; }
        public virtual DbSet<TokenHistory> TokenHistories { get; set; }
        public virtual DbSet<MBMAutomateStatu> MBMAutomateStatus { get; set; }
        public virtual DbSet<mbm_PrePostBillingSetting> mbm_PrePostBillingSetting { get; set; }
        public virtual DbSet<mbm_InvoiceTypes> mbm_InvoiceTypes { get; set; }
    
        public virtual ObjectResult<get_InvoiceType_Result> get_InvoiceType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_InvoiceType_Result>("get_InvoiceType");
        }
    
        public virtual ObjectResult<get_AssoicateAccountsByInvoiceTypeId_Result> get_AssoicateAccountsByInvoiceTypeId(Nullable<int> invoiceTypeId)
        {
            var invoiceTypeIdParameter = invoiceTypeId.HasValue ?
                new ObjectParameter("InvoiceTypeId", invoiceTypeId) :
                new ObjectParameter("InvoiceTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_AssoicateAccountsByInvoiceTypeId_Result>("get_AssoicateAccountsByInvoiceTypeId", invoiceTypeIdParameter);
        }
    
        public virtual ObjectResult<get_InvoiceType1_Result> get_InvoiceType1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_InvoiceType1_Result>("get_InvoiceType1");
        }
    
        public virtual ObjectResult<get_InvoiceNumbersByTypeId_Result> get_InvoiceNumbersByTypeId(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("invoiceID", invoiceID) :
                new ObjectParameter("invoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_InvoiceNumbersByTypeId_Result>("get_InvoiceNumbersByTypeId", invoiceIDParameter);
        }
    
        public virtual int insert_Invoice(Nullable<int> invoiceTypeID, string invoiceNumber, Nullable<int> billingMonth, Nullable<int> billingYear, Nullable<int> defaultImportCurrencyID, string userName, string status, string lastAction, string recordType1_Status, Nullable<System.DateTime> recordType1_DateTime, string recordType2_Status, Nullable<System.DateTime> recordType2_DateTime, string recordType3_Status, Nullable<System.DateTime> recordType3_DateTime, string recordType4_Status, Nullable<System.DateTime> recordType4_DateTime, string recordType5_Status, Nullable<System.DateTime> recordType5_DateTime, string billingFileExport_Status, Nullable<System.DateTime> billingFileExport_DateTime, string billingFileExport_Path, Nullable<int> exportCurrencyID, Nullable<int> serviceDeskSnapshotID)
        {
            var invoiceTypeIDParameter = invoiceTypeID.HasValue ?
                new ObjectParameter("InvoiceTypeID", invoiceTypeID) :
                new ObjectParameter("InvoiceTypeID", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var billingMonthParameter = billingMonth.HasValue ?
                new ObjectParameter("BillingMonth", billingMonth) :
                new ObjectParameter("BillingMonth", typeof(int));
    
            var billingYearParameter = billingYear.HasValue ?
                new ObjectParameter("BillingYear", billingYear) :
                new ObjectParameter("BillingYear", typeof(int));
    
            var defaultImportCurrencyIDParameter = defaultImportCurrencyID.HasValue ?
                new ObjectParameter("DefaultImportCurrencyID", defaultImportCurrencyID) :
                new ObjectParameter("DefaultImportCurrencyID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var lastActionParameter = lastAction != null ?
                new ObjectParameter("LastAction", lastAction) :
                new ObjectParameter("LastAction", typeof(string));
    
            var recordType1_StatusParameter = recordType1_Status != null ?
                new ObjectParameter("RecordType1_Status", recordType1_Status) :
                new ObjectParameter("RecordType1_Status", typeof(string));
    
            var recordType1_DateTimeParameter = recordType1_DateTime.HasValue ?
                new ObjectParameter("RecordType1_DateTime", recordType1_DateTime) :
                new ObjectParameter("RecordType1_DateTime", typeof(System.DateTime));
    
            var recordType2_StatusParameter = recordType2_Status != null ?
                new ObjectParameter("RecordType2_Status", recordType2_Status) :
                new ObjectParameter("RecordType2_Status", typeof(string));
    
            var recordType2_DateTimeParameter = recordType2_DateTime.HasValue ?
                new ObjectParameter("RecordType2_DateTime", recordType2_DateTime) :
                new ObjectParameter("RecordType2_DateTime", typeof(System.DateTime));
    
            var recordType3_StatusParameter = recordType3_Status != null ?
                new ObjectParameter("RecordType3_Status", recordType3_Status) :
                new ObjectParameter("RecordType3_Status", typeof(string));
    
            var recordType3_DateTimeParameter = recordType3_DateTime.HasValue ?
                new ObjectParameter("RecordType3_DateTime", recordType3_DateTime) :
                new ObjectParameter("RecordType3_DateTime", typeof(System.DateTime));
    
            var recordType4_StatusParameter = recordType4_Status != null ?
                new ObjectParameter("RecordType4_Status", recordType4_Status) :
                new ObjectParameter("RecordType4_Status", typeof(string));
    
            var recordType4_DateTimeParameter = recordType4_DateTime.HasValue ?
                new ObjectParameter("RecordType4_DateTime", recordType4_DateTime) :
                new ObjectParameter("RecordType4_DateTime", typeof(System.DateTime));
    
            var recordType5_StatusParameter = recordType5_Status != null ?
                new ObjectParameter("RecordType5_Status", recordType5_Status) :
                new ObjectParameter("RecordType5_Status", typeof(string));
    
            var recordType5_DateTimeParameter = recordType5_DateTime.HasValue ?
                new ObjectParameter("RecordType5_DateTime", recordType5_DateTime) :
                new ObjectParameter("RecordType5_DateTime", typeof(System.DateTime));
    
            var billingFileExport_StatusParameter = billingFileExport_Status != null ?
                new ObjectParameter("BillingFileExport_Status", billingFileExport_Status) :
                new ObjectParameter("BillingFileExport_Status", typeof(string));
    
            var billingFileExport_DateTimeParameter = billingFileExport_DateTime.HasValue ?
                new ObjectParameter("BillingFileExport_DateTime", billingFileExport_DateTime) :
                new ObjectParameter("BillingFileExport_DateTime", typeof(System.DateTime));
    
            var billingFileExport_PathParameter = billingFileExport_Path != null ?
                new ObjectParameter("BillingFileExport_Path", billingFileExport_Path) :
                new ObjectParameter("BillingFileExport_Path", typeof(string));
    
            var exportCurrencyIDParameter = exportCurrencyID.HasValue ?
                new ObjectParameter("ExportCurrencyID", exportCurrencyID) :
                new ObjectParameter("ExportCurrencyID", typeof(int));
    
            var serviceDeskSnapshotIDParameter = serviceDeskSnapshotID.HasValue ?
                new ObjectParameter("ServiceDeskSnapshotID", serviceDeskSnapshotID) :
                new ObjectParameter("ServiceDeskSnapshotID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_Invoice", invoiceTypeIDParameter, invoiceNumberParameter, billingMonthParameter, billingYearParameter, defaultImportCurrencyIDParameter, userNameParameter, statusParameter, lastActionParameter, recordType1_StatusParameter, recordType1_DateTimeParameter, recordType2_StatusParameter, recordType2_DateTimeParameter, recordType3_StatusParameter, recordType3_DateTimeParameter, recordType4_StatusParameter, recordType4_DateTimeParameter, recordType5_StatusParameter, recordType5_DateTimeParameter, billingFileExport_StatusParameter, billingFileExport_DateTimeParameter, billingFileExport_PathParameter, exportCurrencyIDParameter, serviceDeskSnapshotIDParameter);
        }
    
        public virtual ObjectResult<get_AssoicateFileTypesByInvoiceTypeId_Result> get_AssoicateFileTypesByInvoiceTypeId(Nullable<int> invoiceTypeId)
        {
            var invoiceTypeIdParameter = invoiceTypeId.HasValue ?
                new ObjectParameter("InvoiceTypeId", invoiceTypeId) :
                new ObjectParameter("InvoiceTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_AssoicateFileTypesByInvoiceTypeId_Result>("get_AssoicateFileTypesByInvoiceTypeId", invoiceTypeIdParameter);
        }
    
        public virtual int insert_MBMdata_ByInvoiceIdInvoiceType(Nullable<int> invoiceID, Nullable<int> invoiceTypeID, Nullable<int> fileTypeID, string fileName, string uploadedby, Nullable<int> uploadfileID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var invoiceTypeIDParameter = invoiceTypeID.HasValue ?
                new ObjectParameter("InvoiceTypeID", invoiceTypeID) :
                new ObjectParameter("InvoiceTypeID", typeof(int));
    
            var fileTypeIDParameter = fileTypeID.HasValue ?
                new ObjectParameter("FileTypeID", fileTypeID) :
                new ObjectParameter("FileTypeID", typeof(int));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var uploadedbyParameter = uploadedby != null ?
                new ObjectParameter("uploadedby", uploadedby) :
                new ObjectParameter("uploadedby", typeof(string));
    
            var uploadfileIDParameter = uploadfileID.HasValue ?
                new ObjectParameter("uploadfileID", uploadfileID) :
                new ObjectParameter("uploadfileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_MBMdata_ByInvoiceIdInvoiceType", invoiceIDParameter, invoiceTypeIDParameter, fileTypeIDParameter, fileNameParameter, uploadedbyParameter, uploadfileIDParameter);
        }
    
        public virtual int get_CRMInputData(string invoiceNumber, string loggedInUser)
        {
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var loggedInUserParameter = loggedInUser != null ?
                new ObjectParameter("LoggedInUser", loggedInUser) :
                new ObjectParameter("LoggedInUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_CRMInputData", invoiceNumberParameter, loggedInUserParameter);
        }
    
        public virtual ObjectResult<Get_InvoiceFileUploads_ByInvoiceId_Result> Get_InvoiceFileUploads_ByInvoiceId(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_InvoiceFileUploads_ByInvoiceId_Result>("Get_InvoiceFileUploads_ByInvoiceId", invoiceIDParameter);
        }
    
        public virtual int Insert_MBM_ComparisonResult(Nullable<int> invoiceId, Nullable<int> invoiceTypeId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            var invoiceTypeIdParameter = invoiceTypeId.HasValue ?
                new ObjectParameter("InvoiceTypeId", invoiceTypeId) :
                new ObjectParameter("InvoiceTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_MBM_ComparisonResult", invoiceIdParameter, invoiceTypeIdParameter);
        }
    
        public virtual int update_ProcessWorkFlowStatus(string invoiceNumber, Nullable<bool> compareToCRM, Nullable<bool> viewChange, Nullable<bool> approveChange, Nullable<bool> syncCRM, Nullable<bool> importCRMData, Nullable<bool> processInvoice, Nullable<bool> exportInvoiceFile)
        {
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var compareToCRMParameter = compareToCRM.HasValue ?
                new ObjectParameter("CompareToCRM", compareToCRM) :
                new ObjectParameter("CompareToCRM", typeof(bool));
    
            var viewChangeParameter = viewChange.HasValue ?
                new ObjectParameter("ViewChange", viewChange) :
                new ObjectParameter("ViewChange", typeof(bool));
    
            var approveChangeParameter = approveChange.HasValue ?
                new ObjectParameter("ApproveChange", approveChange) :
                new ObjectParameter("ApproveChange", typeof(bool));
    
            var syncCRMParameter = syncCRM.HasValue ?
                new ObjectParameter("SyncCRM", syncCRM) :
                new ObjectParameter("SyncCRM", typeof(bool));
    
            var importCRMDataParameter = importCRMData.HasValue ?
                new ObjectParameter("ImportCRMData", importCRMData) :
                new ObjectParameter("ImportCRMData", typeof(bool));
    
            var processInvoiceParameter = processInvoice.HasValue ?
                new ObjectParameter("ProcessInvoice", processInvoice) :
                new ObjectParameter("ProcessInvoice", typeof(bool));
    
            var exportInvoiceFileParameter = exportInvoiceFile.HasValue ?
                new ObjectParameter("ExportInvoiceFile", exportInvoiceFile) :
                new ObjectParameter("ExportInvoiceFile", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_ProcessWorkFlowStatus", invoiceNumberParameter, compareToCRMParameter, viewChangeParameter, approveChangeParameter, syncCRMParameter, importCRMDataParameter, processInvoiceParameter, exportInvoiceFileParameter);
        }
    
        public virtual ObjectResult<Get_MBM_ComparisonResult_Result> Get_MBM_ComparisonResult(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_MBM_ComparisonResult_Result>("Get_MBM_ComparisonResult", invoiceIdParameter);
        }
    
        public virtual ObjectResult<Get_UnprocessedMBMComparisonResult_Result> Get_UnprocessedMBMComparisonResult(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_UnprocessedMBMComparisonResult_Result>("Get_UnprocessedMBMComparisonResult", invoiceIdParameter);
        }
    
        public virtual ObjectResult<get_InvoiceDetailsByNumber_Result> get_InvoiceDetailsByNumber(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("invoiceID", invoiceID) :
                new ObjectParameter("invoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_InvoiceDetailsByNumber_Result>("get_InvoiceDetailsByNumber", invoiceIDParameter);
        }
    
        public virtual ObjectResult<get_InvoiceFileTypes_ByInvoiceId_Result> get_InvoiceFileTypes_ByInvoiceId(Nullable<int> invoiceTypeId)
        {
            var invoiceTypeIdParameter = invoiceTypeId.HasValue ?
                new ObjectParameter("InvoiceTypeId", invoiceTypeId) :
                new ObjectParameter("InvoiceTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_InvoiceFileTypes_ByInvoiceId_Result>("get_InvoiceFileTypes_ByInvoiceId", invoiceTypeIdParameter);
        }
    
        public virtual int mbm_RecordType1_Process(Nullable<int> invoiceID, string userName, Nullable<int> exportCurrencyID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var exportCurrencyIDParameter = exportCurrencyID.HasValue ?
                new ObjectParameter("ExportCurrencyID", exportCurrencyID) :
                new ObjectParameter("ExportCurrencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mbm_RecordType1_Process", invoiceIDParameter, userNameParameter, exportCurrencyIDParameter);
        }
    
        public virtual ObjectResult<mbm_RecordType1_ValidateInvoice_Result> mbm_RecordType1_ValidateInvoice(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mbm_RecordType1_ValidateInvoice_Result>("mbm_RecordType1_ValidateInvoice", invoiceIDParameter);
        }
    
        public virtual int mbm_RecordType2_Process(Nullable<int> invoiceID, string userName, Nullable<int> exportCurrencyID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var exportCurrencyIDParameter = exportCurrencyID.HasValue ?
                new ObjectParameter("ExportCurrencyID", exportCurrencyID) :
                new ObjectParameter("ExportCurrencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mbm_RecordType2_Process", invoiceIDParameter, userNameParameter, exportCurrencyIDParameter);
        }
    
        public virtual ObjectResult<mbm_RecordType2_ValidateInvoice_Result> mbm_RecordType2_ValidateInvoice(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mbm_RecordType2_ValidateInvoice_Result>("mbm_RecordType2_ValidateInvoice", invoiceIDParameter);
        }
    
        public virtual int Update_InvoiceRecordTypes(Nullable<int> invoiceID, string recordType1Status, string recordType2Status, string recordType3Status, string recordType4Status, string recordType5Status, string lastUpdatedBy)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            var recordType1StatusParameter = recordType1Status != null ?
                new ObjectParameter("RecordType1Status", recordType1Status) :
                new ObjectParameter("RecordType1Status", typeof(string));
    
            var recordType2StatusParameter = recordType2Status != null ?
                new ObjectParameter("RecordType2Status", recordType2Status) :
                new ObjectParameter("RecordType2Status", typeof(string));
    
            var recordType3StatusParameter = recordType3Status != null ?
                new ObjectParameter("RecordType3Status", recordType3Status) :
                new ObjectParameter("RecordType3Status", typeof(string));
    
            var recordType4StatusParameter = recordType4Status != null ?
                new ObjectParameter("RecordType4Status", recordType4Status) :
                new ObjectParameter("RecordType4Status", typeof(string));
    
            var recordType5StatusParameter = recordType5Status != null ?
                new ObjectParameter("RecordType5Status", recordType5Status) :
                new ObjectParameter("RecordType5Status", typeof(string));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_InvoiceRecordTypes", invoiceIDParameter, recordType1StatusParameter, recordType2StatusParameter, recordType3StatusParameter, recordType4StatusParameter, recordType5StatusParameter, lastUpdatedByParameter);
        }
    
        public virtual int mbm_FetchCRMDataFromUI(string invoiceNumber, string loggedInUser)
        {
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var loggedInUserParameter = loggedInUser != null ?
                new ObjectParameter("LoggedInUser", loggedInUser) :
                new ObjectParameter("LoggedInUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mbm_FetchCRMDataFromUI", invoiceNumberParameter, loggedInUserParameter);
        }
    
        public virtual int insert_InvoiceInMBMAutomate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_InvoiceInMBMAutomate");
        }
    }
}
